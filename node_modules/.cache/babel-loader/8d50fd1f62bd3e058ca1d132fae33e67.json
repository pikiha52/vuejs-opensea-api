{"ast":null,"code":"import { onMounted, reactive } from \"vue\";\nimport axios from \"../plugins/axios\";\nimport Button from \"@/components/Button.vue\";\nimport ButtonBlack from \"@/components/ButtonBlack.vue\";\nexport default {\n  components: {\n    Button,\n    ButtonBlack\n  },\n\n  setup() {\n    const state = reactive({\n      coint: {}\n    });\n    onMounted(async () => {\n      const {\n        data\n      } = await axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1`);\n      state.coint = data;\n    });\n    return {\n      state\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA2EA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,KAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,eAAe;AACbC,YAAU,EAAE;AACVF,UADU;AAEVC;AAFU,GADC;;AAKbE,OAAK,GAAG;AACN,UAAMC,KAAI,GAAIN,QAAQ,CAAC;AACrBO,WAAK,EAAE;AADc,KAAD,CAAtB;AAIAR,aAAS,CAAC,YAAY;AACpB,YAAM;AAAES;AAAF,UAAW,MAAMP,KAAK,CAACQ,GAAN,CACpB,yGADoB,CAAvB;AAGAH,WAAK,CAACC,KAAN,GAAcC,IAAd;AACD,KALQ,CAAT;AAOA,WAAO;AACLF;AADK,KAAP;AAGD;;AApBY,CAAf","names":["onMounted","reactive","axios","Button","ButtonBlack","components","setup","state","coint","data","get"],"sourceRoot":"","sources":["/Users/pikih/Documents/source-nodejs/nft-overview/src/components/CardList.vue"],"sourcesContent":["<template>\n  <!-- This example requires Tailwind CSS v2.0+ -->\n  <div class=\"w-2/5 h-[340px] overflow-y-auto space-y-2 bg-white rounded-md shadow overflow-hidden sm:rounded-md px-2\">\n  <p class=\"text-gray-700 font-bold relative\">Coint</p>\n    <ul role=\"list\" class=\"divide-y divide-gray-200\">\n      <div v-for=\"coints in state.coint\" :key=\"coints.id\">\n      <li class=\"flex gap-5 bg-gray-100 rounded-md px-4 py-4 sm:px-6\">\n        <div class=\"w-10 rounded-md bg-violet-300 h-10\">\n          <img :src=\"coints.image\" alt=\"\">\n        </div>\n        <div class=\"grid\">\n          <div class=\"flex gap-6\">\n        <p class=\"text-gray-700 font-semibold text-sm uppercase\">{{ coints.symbol }}</p>\n        <p class=\"text-gray-500 font-normal text-xs\">Rank {{ coints.market_cap_rank }}</p>\n          </div>\n        <p class=\"text-gray-500 font-normal text-xs\">{{ coints.market_cap }}</p>\n        </div>\n      </li>\n      </div>\n    </ul>\n  </div>\n\n  <!-- This example requires Tailwind CSS v2.0+ -->\n<div class=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n    <!--\n      Background overlay, show/hide based on modal state.\n\n      Entering: \"ease-out duration-300\"\n        From: \"opacity-0\"\n        To: \"opacity-100\"\n      Leaving: \"ease-in duration-200\"\n        From: \"opacity-100\"\n        To: \"opacity-0\"\n    -->\n    <div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\n\n    <!-- This element is to trick the browser into centering the modal contents. -->\n    <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n\n    <!--\n      Modal panel, show/hide based on modal state.\n\n      Entering: \"ease-out duration-300\"\n        From: \"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n        To: \"opacity-100 translate-y-0 sm:scale-100\"\n      Leaving: \"ease-in duration-200\"\n        From: \"opacity-100 translate-y-0 sm:scale-100\"\n        To: \"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n    -->\n    <div class=\"relative inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\n      <div>\n        <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\n          <!-- Heroicon name: outline/check -->\n          <svg class=\"h-6 w-6 text-green-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n          </svg>\n        </div>\n        <div class=\"mt-3 text-center sm:mt-5\">\n          <h3 class=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-title\">Payment successful</h3>\n          <div class=\"mt-2\">\n            <p class=\"text-sm text-gray-500\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur amet labore.</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"mt-5 sm:mt-6\">\n        <button type=\"button\" class=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm\">Go back to dashboard</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n</template>\n\n<script>\nimport { onMounted, reactive } from \"vue\";\nimport axios from \"../plugins/axios\";\nimport Button from \"@/components/Button.vue\";\nimport ButtonBlack from \"@/components/ButtonBlack.vue\";\n\nexport default {\n  components: {\n    Button,\n    ButtonBlack,\n  },\n  setup() {\n    const state = reactive({\n      coint: {},\n    });\n\n    onMounted(async () => {\n      const { data } = await axios.get(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1`\n      );\n      state.coint = data;\n    });\n\n    return {\n      state,\n    };\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}