{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"w-2/5 bg-white rounded-md shadow overflow-hidden sm:rounded-md px-2\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-gray-700 font-bold\"\n}, \"Coint\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  role: \"list\",\n  class: \"divide-y divide-gray-200\"\n};\nconst _hoisted_4 = {\n  class: \"flex gap-5 bg-gray-100 rounded-md px-4 py-4 sm:px-6\"\n};\nconst _hoisted_5 = {\n  class: \"w-10 rounded-md bg-violet-300 h-10\"\n};\nconst _hoisted_6 = [\"src\"];\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"grid\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-gray-700 font-semibold text-sm\"\n}, \"BTC\"), /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-gray-500 font-normal text-xs\"\n}, \"12.0021\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" This example requires Tailwind CSS v2.0+ \"), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.state.coint, coints => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: coints.id\n    }, [_createElementVNode(\"li\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n      src: coints.image,\n      alt: \"\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_6)]), _hoisted_7])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;AAEOA,OAAK,EAAC;;;gCACXC,oBAA4C,GAA5C,EAA4C;AAAzCD,OAAK,EAAC;AAAmC,CAA5C,EAAmC,OAAnC,EAAwC;AAAA;AAAxC;;;AACME,MAAI,EAAC;AAAOF,OAAK,EAAC;;;AAEhBA,OAAK,EAAC;;;AACHA,OAAK,EAAC;;;;gCAGXC,oBAGM,KAHN,EAGM;AAHDD,OAAK,EAAC;AAGL,CAHN,EAAiB,cACjBC,oBAAsD,GAAtD,EAAsD;AAAnDD,OAAK,EAAC;AAA6C,CAAtD,EAA+C,KAA/C,CADiB,eAEjBC,oBAAwD,GAAxD,EAAwD;AAArDD,OAAK,EAAC;AAA+C,CAAxD,EAA6C,SAA7C,CAFiB,CAAjB;;AAAA;;;6DATNG,mEACAF,oBAeM,KAfN,cAeM,CAdNG,UAcM,EAbJH,oBAYK,IAZL,cAYK,oBAXHI,oBAUMC,SAVN,EAUM,IAVN,EAUMC,YAVgBC,aAAMC,KAUtB,EAVMC,MAAqB,IAAf;yBAAlBL,oBAUM,KAVN,EAUM;AAV8BM,SAAG,EAAED,MAAM,CAACE;AAU1C,KAVN,GACAX,oBAQK,IARL,cAQK,CAPHA,oBAEM,KAFN,cAEM,CADJA,oBAAgC,KAAhC,EAAgC;AAA1BY,SAAG,EAAEH,MAAM,CAACI,KAAc;AAAPC,SAAG,EAAC;AAAG,KAAhC;;AAAA,iBACI,CAFN,CAOG,EAJHC,UAIG,CARL,EADA;GAUM,CAVN;;AAAA,GAWG,EAZL,CAaI,CAfN","names":["class","_createElementVNode","role","_createCommentVNode","_hoisted_2","_createElementBlock","_Fragment","_renderList","$setup","coint","coints","key","id","src","image","alt","_hoisted_7"],"sourceRoot":"","sources":["/Users/pikih/Documents/source-nodejs/nft-overview/src/components/CardList.vue"],"sourcesContent":["<template>\n  <!-- This example requires Tailwind CSS v2.0+ -->\n  <div class=\"w-2/5 bg-white rounded-md shadow overflow-hidden sm:rounded-md px-2\">\n  <p class=\"text-gray-700 font-bold\">Coint</p>\n    <ul role=\"list\" class=\"divide-y divide-gray-200\">\n      <div v-for=\"coints in state.coint\" :key=\"coints.id\">\n      <li class=\"flex gap-5 bg-gray-100 rounded-md px-4 py-4 sm:px-6\">\n        <div class=\"w-10 rounded-md bg-violet-300 h-10\">\n          <img :src=\"coints.image\" alt=\"\">\n        </div>\n        <div class=\"grid\">\n        <p class=\"text-gray-700 font-semibold text-sm\">BTC</p>\n        <p class=\"text-gray-500 font-normal text-xs\">12.0021</p>\n        </div>\n      </li>\n      </div>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { onMounted, reactive } from \"vue\";\nimport axios from \"../plugins/axios\";\nimport Button from \"@/components/Button.vue\";\nimport ButtonBlack from \"@/components/ButtonBlack.vue\";\n\nexport default {\n  components: {\n    Button,\n    ButtonBlack,\n  },\n  setup() {\n    const state = reactive({\n      coint: {},\n    });\n\n    onMounted(async () => {\n      const { data } = await axios.get(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc`\n      );\n      state.coint = data;\n    });\n\n    return {\n      state,\n    };\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}